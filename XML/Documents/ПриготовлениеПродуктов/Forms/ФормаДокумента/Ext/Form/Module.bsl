// Переменная модуля формы для хранения предыдущего значения.
&НаКлиенте
Перем ПредыдущийПродукт;

&НаКлиенте
Перем ПолученныеИнгредиенты;


// Эта процедура выполняется на сервере. Она получает ссылку на продукт и возвращает структуру с результатом проверки и списком ингредиентов.
&НаСервере
Функция ПолучитьДанныеПоПродуктуНаСервере(ПродуктСсылка)
	
	Результат = Новый Структура;
	Результат.Вставить("ЭтоСобственноеПроизводство", Ложь);
	Результат.Вставить("СписокИнгредиентов", Новый Соответствие);
	
	// На сервере мы можем безопасно обратиться к реквизиту через точку.
	Если ПродуктСсылка.ТипПродукта.ГотовимСами Тогда
		Результат.ЭтоСобственноеПроизводство = Истина;
		
		// Запрашиваем список ингредиентов и сохраняем
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РецептыИнгредиенты.Продукт КАК Ингредиент,
		|	РецептыИнгредиенты.Количество КАК Количество
		|ИЗ
		|	Справочник.Рецепты.Ингредиенты КАК РецептыИнгредиенты
		|ГДЕ
		|	РецептыИнгредиенты.Ссылка.Продукт = &Продукт";
		
		Запрос.УстановитьПараметр("Продукт", ПродуктСсылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Результат.СписокИнгредиентов.Вставить(Выборка.Ингредиент, Выборка.Количество);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Клиентская процедура, которая срабатывает при изменении продукта в поле ввода.
&НаКлиенте
Процедура ПродуктПриИзменении(Элемент)
	
	// 1. Если пользователь выбрал тот же самый продукт, ничего не делаем.
	Если Объект.Продукт = ПредыдущийПродукт Тогда
		Возврат;
	КонецЕсли;
	
	// 2. Продукт изменился. Сразу очищаем таблицу ингредиентов.
	Объект.Ингредиенты.Очистить();
	
	// 3. Проверяем, заполнено ли новое значение. Если поле очистили, выходим.
	Если НЕ ЗначениеЗаполнено(Объект.Продукт) Тогда
		// Сохраняем новое (пустое) значение и выходим.
		ПредыдущийПродукт = Объект.Продукт;
		Возврат;
	КонецЕсли;
	
	// 4. Делаем запрос на сервер, чтобы получить данные по новому продукту.
	ДанныеПоПродукту = ПолучитьДанныеПоПродуктуНаСервере(Объект.Продукт);
	
	// 5. Если это продукт собственного производства, заполняем таблицу.
	Если ДанныеПоПродукту.ЭтоСобственноеПроизводство Тогда
		Для Каждого КлючИЗначение Из ДанныеПоПродукту.СписокИнгредиентов Цикл
			НоваяСтрока = Объект.Ингредиенты.Добавить();
			НоваяСтрока.Продукт = КлючИЗначение.Ключ;
			// Расчет количества ингредиента на основе количества готового продукта.
			НоваяСтрока.Количество = КлючИЗначение.Значение * ?(Объект.Количество > 0, Объект.Количество, 1);
		КонецЦикла;
	КонецЕсли;
	
	// Запоминаем полученные игредиенты, чтобы при изменении количества пересчитывать их без лишних обращений к серверу
	ПолученныеИнгредиенты = ДанныеПоПродукту.СписокИнгредиентов;
	
	// 6. В самом конце запоминаем текущий продукт как предыдущий для следующего изменения.
	ПредыдущийПродукт = Объект.Продукт;
	
КонецПроцедуры


// Пересчитываем количество ингредиентов при изменении количества основного продукта.
&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	
	// Если ингредиенты есть (т.е. это наше производство), то пересчитываем их количество
	Если ПолученныеИнгредиенты <> Неопределено И ПолученныеИнгредиенты.Количество() > 0 Тогда
		
		Для Каждого СтрокаТЧ Из Объект.Ингредиенты Цикл
			// Получаем базовое количество для этого ингредиента
			БазовоеКол = ПолученныеИнгредиенты.Получить(СтрокаТЧ.Продукт);
			Если БазовоеКол <> Неопределено Тогда
				// Умножаем на количество основного продукта
				СтрокаТЧ.Количество = БазовоеКол * ?(Объект.Количество > 0, Объект.Количество, 1);
			Иначе
				Сообщить(СтрокаТЧ.Продукт + " не включен в рецепт. Измените его количество вручную, если необходимо.");
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры


// Считаем итоговую цену продукта из ингредиентов и их количества
&НаСервере
Процедура ПосчитатьЦенуНаСервере(КартаИнгредиентКоличество)
	
	// Список ингредиентов для запроса
	СписокИнгредиентов = Новый Массив;
	Для Каждого СтрокаИК Из КартаИнгредиентКоличество Цикл
		СписокИнгредиентов.Добавить(СтрокаИК.Ключ);
	КонецЦикла;
	
	// Запрос остатков продуктов, их количества и цены
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПродуктыОстатки.Продукт КАК Продукт,
	|	ЕСТЬNULL(ПродуктыОстатки.СуммаОстаток / ПродуктыОстатки.КоличествоОстаток, 0) КАК ЦенаЕдиницы,
	|	ПродуктыОстатки.Продукт.Представление КАК ПродуктПредставление,
	|	ПродуктыОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.Продукты.Остатки(, Продукт В (&СписокИнгредиентов)) КАК ПродуктыОстатки";
	
	Запрос.УстановитьПараметр("СписокИнгредиентов", СписокИнгредиентов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	// Обработка результата запроса
	Цена = 0;
	Пока Выборка.Следующий() Цикл
		НеобходимоеКолво = КартаИнгредиентКоличество.Получить(Выборка.Продукт);
		
		// Проверка остатков
		Если Выборка.КоличествоОстаток < НеобходимоеКолво Тогда
			Сообщить("Недостаточно товара " + Выборка.ПродуктПредставление + "! Осталось " + Выборка.КоличествоОстаток);
		КонецЕсли;
		
		// Считаем цену
		ЦенаТекущая = Выборка.ЦенаЕдиницы * НеобходимоеКолво;
		Цена = Цена + ?(ЦенаТекущая = Null, 0, ЦенаТекущая);
	КонецЦикла;
	
	// Устанавливаем цену
	Объект.Цена = Цена;
	
КонецПроцедуры

// Обработка нажатия на кнопку "Посчитать цену"
&НаКлиенте
Процедура ПосчитатьЦену(Команда)
	
	Если Объект.Ингредиенты.Количество() > 0 Тогда
		// Соответствие из ингредиента и его количества
		КартаИнгредиентКоличество = Новый Соответствие;
		Для Каждого Строка Из Объект.Ингредиенты Цикл
			ПредЗнач = КартаИнгредиентКоличество.Получить(Строка.Продукт);
			Если (ПредЗнач) = Неопределено Тогда
				КартаИнгредиентКоличество.Вставить(Строка.Продукт, Строка.Количество);
			Иначе
				КартаИнгредиентКоличество.Вставить(Строка.Продукт, Строка.Количество + ПредЗнач);
			КонецЕсли;
		КонецЦикла;
		// Устанавливаем цену в данные 
		ПосчитатьЦенуНаСервере(КартаИнгредиентКоличество);
	КонецЕсли;
	
КонецПроцедуры




